#pragma once

namespace EMT {
#define EMT_NONE 0

// data Type
#define EMT_UNSIGNED_BYTE 0x1401
#define EMT_SHORT 0x1402
#define EMT_UNSIGNED_SHORT 0x1403
#define EMT_INT 0x1404
#define EMT_UNSIGNED_INT 0x1405
#define EMT_FLOAT 0x1406

// data format
#define EMT_RED 0x1903
#define EMT_GREEN 0x1904
#define EMT_BLUE 0x1905
#define EMT_ALPHA 0x1906
#define EMT_RGB 0x1907
#define EMT_RGBA 0x1908
#define EMT_RG 0x8227
#define EMT_RG_INTEGER 0x8228
#define EMT_R8 0x8229
#define EMT_R16 0x822A
#define EMT_RG8 0x822B
#define EMT_RG16 0x822C
#define EMT_R16F 0x822D
#define EMT_R32F 0x822E
#define EMT_RG16F 0x822F
#define EMT_RG32F 0x8230
#define EMT_R8I 0x8231
#define EMT_R8UI 0x8232
#define EMT_R16I 0x8233
#define EMT_R16UI 0x8234
#define EMT_R32I 0x8235
#define EMT_R32UI 0x8236
#define EMT_RG8I 0x8237
#define EMT_RG8UI 0x8238
#define EMT_RG16I 0x8239
#define EMT_RG16UI 0x823A
#define EMT_RG32I 0x823B
#define EMT_RG32UI 0x823C
#define EMT_RGBA32F 0x8814
#define EMT_RGB32F 0x8815
#define EMT_RGBA16F 0x881A
#define EMT_RGB16F 0x881B
#define EMT_RGBA32UI 0x8D70
#define EMT_RGB32UI 0x8D71
#define EMT_RGBA16UI 0x8D76
#define EMT_RGB16UI 0x8D77
#define EMT_RGBA8UI 0x8D7C
#define EMT_RGB8UI 0x8D7D
#define EMT_RGBA32I 0x8D82
#define EMT_RGB32I 0x8D83
#define EMT_RGBA16I 0x8D88
#define EMT_RGB16I 0x8D89
#define EMT_RGBA8I 0x8D8E
#define EMT_RGB8I 0x8D8F
#define EMT_SRGB 0x8C40
#define EMT_SRGB8 0x8C41
#define EMT_SRGB_ALPHA 0x8C42
#define EMT_SRGB8_ALPHA8 0x8C43
#define EMT_DEPTH_COMPONENT16 0x81A5
#define EMT_DEPTH_COMPONENT24 0x81A6
#define EMT_DEPTH_COMPONENT32 0x81A7

// texture settings
#define EMT_NEAREST 0x2600
#define EMT_LINEAR 0x2601
#define EMT_NEAREST_MIPMAP_NEAREST 0x2700
#define EMT_LINEAR_MIPMAP_NEAREST 0x2701
#define EMT_NEAREST_MIPMAP_LINEAR 0x2702
#define EMT_LINEAR_MIPMAP_LINEAR 0x2703
#define EMT_TEXTURE_MAG_FILTER 0x2800
#define EMT_TEXTURE_MIN_FILTER 0x2801
#define EMT_TEXTURE_WRAP_S 0x2802
#define EMT_TEXTURE_WRAP_T 0x2803
#define EMT_REPEAT 0x2901
#define EMT_CLAMP_TO_EDGE 0x812F

#define EMT_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define EMT_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define EMT_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define EMT_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define EMT_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define EMT_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A

// texture target
#define EMT_TEXTURE_1D 0x0DE0
#define EMT_TEXTURE_2D 0x0DE1
#define EMT_TEXTURE_2D_MULTISAMPLE 0x9100
#define EMT_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define EMT_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define EMT_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103

// framebuffer setting
#define EMT_COLOR_ATTACHMENT0 0x8CE0
#define EMT_DEPTH_ATTACHMENT 0x8D00
#define EMT_STENCIL_ATTACHMENT 0x8D20
#define EMT_DEPTH_STENCIL_ATTACHMENT 0x821A
#define EMT_DEPTH_STENCIL 0x84F9
#define EMT_UNSIGNED_INT_24_8 0x84FA
#define EMT_DEPTH24_STENCIL8 0x88F0


	// ToDO
	// 原本是为了将Texture抽象出来，以适配多个渲染API，需要定义Texture的各种枚举类
	// 并且在各个API实现Texture的时候，还要写转换函数，工程量较大，之后再考虑剥离，这里直接偷glad的定义了
	enum class TextureFormat {
		NONE,
	};
}